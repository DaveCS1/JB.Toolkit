.TH "JBToolkit.InterProcessComms.Sockets" 3 "Tue Sep 1 2020" "JB.Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JBToolkit.InterProcessComms.Sockets \- \fBWindows\fP does not support the AF_UNIX family of sockets, only TCP/IP, so, for demonstrating IP network communication I could have chosen either TCP or UDP, but I went for UDP because of the better performance and because of the relative simplicity that this example required\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBSocketClient\fP"
.br
.ti -1c
.RI "class \fBSocketServer\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBWindows\fP does not support the AF_UNIX family of sockets, only TCP/IP, so, for demonstrating IP network communication I could have chosen either TCP or UDP, but I went for UDP because of the better performance and because of the relative simplicity that this example required\&. 

It leverages the UdpClient class to send byte-array messages, because this class hides some of the complexity of Socket, making it easier to use\&. As a side note, it is even possible to use WCF with a UDP transport (binding)\&.
.PP
Because the Receive method blocks until there is some contents to receive, we need to spawn a thread to avoid blocking\&.
.PP
Gist from: https://weblogs.asp.net/ricardoperes/local-machine-interprocess-communication-with-net
.SH "Author"
.PP 
Generated automatically by Doxygen for JB\&.Toolkit from the source code\&.
