.TH "JBToolkit.InterProcessComms.NetRemoting" 3 "Thu Oct 1 2020" "JB.Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JBToolkit.InterProcessComms.NetRemoting \- \&.NET Remoting, in the old days, was \&.NET’s response to Java RMI, and basically was a remote references implementation, similar to CORBA\&. With Remoting, one can call methods on an object that resides in a different machine\&. \&.NET Remoting has long since been superseded by WCF, but it is still a viable alternative, particularly because WCF does not allow remote references\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBRemoteObject\fP"
.br
.ti -1c
.RI "class \fBRemotingClient\fP"
.br
.ti -1c
.RI "class \fBRemotingServer\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\&.NET Remoting, in the old days, was \&.NET’s response to Java RMI, and basically was a remote references implementation, similar to CORBA\&. With Remoting, one can call methods on an object that resides in a different machine\&. \&.NET Remoting has long since been superseded by WCF, but it is still a viable alternative, particularly because WCF does not allow remote references\&. 

Gist from: https://weblogs.asp.net/ricardoperes/local-machine-interprocess-communication-with-net
.SH "Author"
.PP 
Generated automatically by Doxygen for JB\&.Toolkit from the source code\&.
