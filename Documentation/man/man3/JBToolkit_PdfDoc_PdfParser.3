.TH "JBToolkit.PdfDoc.PdfParser" 3 "Sat Oct 10 2020" "JB.Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JBToolkit.PdfDoc.PdfParser \- PDF Parsing methods  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static string \fBGetPdfContentAsString\fP (string path, int timeoutSeconds=30, bool throwOnError=true, bool utilisePDFtoTextCommandLineUtility=true)"
.br
.RI "Converts PDF to pure text using iTextSharp (very quick) and optionally falls back to using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails "
.ti -1c
.RI "static string \fBGetPdfContentAsString\fP (MemoryStream ms, int timeoutSeconds=30, bool throwOnError=true, bool utilisePDFtoTextCommandLineUtility=true)"
.br
.RI "Converts PDF to pure text using iTextSharp (very quick) and optionally falls back to using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails\&. 
.br
 "
.ti -1c
.RI "static string \fBGetPdfContentAsString_CmdLineTool\fP (string path, int timeoutSeconds=30, bool throwOnError=true)"
.br
.RI "Converts PDF to pure text using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails "
.ti -1c
.RI "static string \fBGetPdfContentAsString_CmdLineTool\fP (MemoryStream ms, int timeoutSeconds=30, bool throwOnError=true)"
.br
.RI "Converts PDF to pure text using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails "
.in -1c
.SH "Detailed Description"
.PP 
PDF Parsing methods 


.SH "Member Function Documentation"
.PP 
.SS "static string JBToolkit\&.PdfDoc\&.PdfParser\&.GetPdfContentAsString (MemoryStream ms, int timeoutSeconds = \fC30\fP, bool throwOnError = \fCtrue\fP, bool utilisePDFtoTextCommandLineUtility = \fCtrue\fP)\fC [static]\fP"

.PP
Converts PDF to pure text using iTextSharp (very quick) and optionally falls back to using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails\&. 
.br
 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP Path to PDF file
.br
\fItimeoutSeconds\fP Timeout in seconds before reporting failure
.br
\fIthrowOnError\fP Whether not to throw (break) on error just return an empty string
.br
\fIutilisePDFtoTextCommandLineUtility\fP Default to true - Flag to optionally use the embedded xPDF PdftoText command line utility (slow) as a fallback when iTextSharp doesn't work
.RE
.PP
\fBReturns\fP
.RS 4
Content as string
.RE
.PP

.SS "static string JBToolkit\&.PdfDoc\&.PdfParser\&.GetPdfContentAsString (string path, int timeoutSeconds = \fC30\fP, bool throwOnError = \fCtrue\fP, bool utilisePDFtoTextCommandLineUtility = \fCtrue\fP)\fC [static]\fP"

.PP
Converts PDF to pure text using iTextSharp (very quick) and optionally falls back to using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP Path to PDF file
.br
\fItimeoutSeconds\fP Timeout in seconds before reporting failure
.br
\fIthrowOnError\fP Whether not to throw (break) on error just return an empty string
.br
\fIutilisePDFtoTextCommandLineUtility\fP Default to true - Flag to optionally use the embedded xPDF PdftoText command line utility (slow) as a fallback when iTextSharp doesn't work
.RE
.PP
\fBReturns\fP
.RS 4
Content as string
.RE
.PP

.SS "static string JBToolkit\&.PdfDoc\&.PdfParser\&.GetPdfContentAsString_CmdLineTool (MemoryStream ms, int timeoutSeconds = \fC30\fP, bool throwOnError = \fCtrue\fP)\fC [static]\fP"

.PP
Converts PDF to pure text using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP Path to PDF file
.br
\fItimeoutSeconds\fP Timeout in seconds before reporting failure
.br
\fIthrowOnError\fP Whether not to throw (break) on error just return an empty string
.RE
.PP
\fBReturns\fP
.RS 4
Content as string
.RE
.PP

.SS "static string JBToolkit\&.PdfDoc\&.PdfParser\&.GetPdfContentAsString_CmdLineTool (string path, int timeoutSeconds = \fC30\fP, bool throwOnError = \fCtrue\fP)\fC [static]\fP"

.PP
Converts PDF to pure text using xPDF PDFtoText command line utility (embedded) if iTextSharp text extract fails 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP Path to PDF file
.br
\fItimeoutSeconds\fP Timeout in seconds before reporting failure
.br
\fIthrowOnError\fP Whether not to throw (break) on error just return an empty string
.RE
.PP
\fBReturns\fP
.RS 4
Content as string
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for JB\&.Toolkit from the source code\&.
