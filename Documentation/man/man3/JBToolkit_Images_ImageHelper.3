.TH "JBToolkit.Images.ImageHelper" 3 "Sun Oct 18 2020" "JB.Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JBToolkit.Images.ImageHelper \- Image manipulation helper methods  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBConverter\fP"
.br
.ti -1c
.RI "class \fBHtmlImageHelper\fP"
.br
.ti -1c
.RI "class \fBIconHelper\fP"
.br
.RI "A Helper class for multi-resolution icon files "
.ti -1c
.RI "class \fBMimeHelper\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static byte[] \fBCompressImage\fP (byte[] imageBytes, int quality=50, int resizeMaxWidth=\-1, int resizeMaxHeight=\-1)"
.br
.RI "Compresses the image, and also gives the option to resize (max height / width specific while maintaining aspect ration)\&. If set to -1 it means to use the current image's width / height; "
.ti -1c
.RI "static Image \fBCompressImage\fP (Image inputImage, int quality=50, int resizeMaxWidth=\-1, int resizeMaxHeight=\-1)"
.br
.RI "Compresses the image, and also gives the option to resize (max height / width specific while maintaining aspect ration)\&. If set to -1 it means to use the current image's width / height; "
.ti -1c
.RI "static void \fBCompressImage\fP (string inputImagePath, string outputImagePath, int quality=50, int resizeMaxWidth=\-1, int resizeMaxHeight=\-1)"
.br
.RI "Compresses the image, and also gives the option to resize (max height / width specific while maintaining aspect ration)\&. If set to -1 it means to use the current image's width / height; "
.ti -1c
.RI "static byte[] \fBResizeImage\fP (byte[] image, int width, int height)"
.br
.RI "Resizes an image based on specific width and height "
.ti -1c
.RI "static System\&.Drawing\&.Image \fBResizeImage\fP (System\&.Drawing\&.Image image, int width, int height)"
.br
.RI "Resize an image with specific width and height "
.ti -1c
.RI "static void \fBResizeImage\fP (string inputPath, string outputPath, int width, int height)"
.br
.RI "Resize an image with specific width and height and saved it to file "
.ti -1c
.RI "static byte[] \fBResizeImage\fP (byte[] image, int percentage)"
.br
.RI "Resize an image based on percentage to increase (above 100%) or decrease (below 100%) "
.ti -1c
.RI "static System\&.Drawing\&.Image \fBResizeImage\fP (System\&.Drawing\&.Image image, int percentage)"
.br
.RI "Resize an image based on percentage to increase (above 100%) or decrease (below 100%) "
.ti -1c
.RI "static byte[] \fBResizeImageMaintainAspectRatio\fP (byte[] image, int width, int height)"
.br
.RI "Resizes an image based on specific width and height "
.ti -1c
.RI "static void \fBResizeImageMaintainAspectRatio\fP (string inputPath, string outputPath, int width, int height)"
.br
.RI "Resize an image with specific width and height and saved it to file "
.ti -1c
.RI "static Image \fBResizeImageMaintainAspectRatio\fP (Image image, int width, int height)"
.br
.RI "Resizes an image and keeps the aspect ratio "
.ti -1c
.RI "static System\&.Drawing\&.Image \fBAdjustBrightness\fP (System\&.Drawing\&.Image image, float brightness)"
.br
.RI "Adjust the brightness of an image "
.ti -1c
.RI "static System\&.Drawing\&.Image \fBLightenImage\fP (System\&.Drawing\&.Image image)"
.br
.RI "Lightens an image "
.ti -1c
.RI "static System\&.Drawing\&.Image \fBNormalizeOrientation\fP (System\&.Drawing\&.Image image)"
.br
.RI "This looks to see if there's an exif property on the image (meta property on image file that's usually applied when using the context menu in \fBWindows\fP to rotate an image)\&. If there is it properly rotates the image and removes the exif meta property\&. "
.ti -1c
.RI "static byte[] \fBGetImageXxHash\fP (Image image)"
.br
.RI "Get a 32bit xxHash of an image (very fast and useful for comparing) "
.ti -1c
.RI "static bool \fBIsSameImage\fP (Image imageA, Image imageB)"
.br
.RI "Checks if 1 image is the same as another by comparing its SHA hash\&. Also performs a quick check on image dimentions to avoid performs cost of unnecessarily generating a hash "
.in -1c
.SH "Detailed Description"
.PP 
Image manipulation helper methods 


.SH "Member Function Documentation"
.PP 
.SS "static System\&.Drawing\&.Image JBToolkit\&.Images\&.ImageHelper\&.AdjustBrightness (System\&.Drawing\&.Image image, float brightness)\fC [static]\fP"

.PP
Adjust the brightness of an image 
.SS "static byte [] JBToolkit\&.Images\&.ImageHelper\&.CompressImage (byte[] imageBytes, int quality = \fC50\fP, int resizeMaxWidth = \fC\-1\fP, int resizeMaxHeight = \fC\-1\fP)\fC [static]\fP"

.PP
Compresses the image, and also gives the option to resize (max height / width specific while maintaining aspect ration)\&. If set to -1 it means to use the current image's width / height; 
.PP
\fBParameters\fP
.RS 4
\fIimageBytes\fP Byte array of image as input
.br
\fIquality\fP 0 - 100
.br
\fIresizeMaxWidth\fP If set to -1 it means to use the current image's width ;
.br
\fIresizeMaxHeight\fP If set to -1 it means to use the current image's height;
.RE
.PP
\fBReturns\fP
.RS 4
Byte array of imagge
.RE
.PP

.SS "static Image JBToolkit\&.Images\&.ImageHelper\&.CompressImage (Image inputImage, int quality = \fC50\fP, int resizeMaxWidth = \fC\-1\fP, int resizeMaxHeight = \fC\-1\fP)\fC [static]\fP"

.PP
Compresses the image, and also gives the option to resize (max height / width specific while maintaining aspect ration)\&. If set to -1 it means to use the current image's width / height; 
.PP
\fBParameters\fP
.RS 4
\fIinputImage\fP System\&.Drawing\&.Image as input
.br
\fIquality\fP 0 - 100
.br
\fIresizeMaxWidth\fP If set to -1 it means to use the current image's width ;
.br
\fIresizeMaxHeight\fP If set to -1 it means to use the current image's height;
.RE
.PP
\fBReturns\fP
.RS 4
System\&.Drawing\&.Image as output
.RE
.PP

.SS "static void JBToolkit\&.Images\&.ImageHelper\&.CompressImage (string inputImagePath, string outputImagePath, int quality = \fC50\fP, int resizeMaxWidth = \fC\-1\fP, int resizeMaxHeight = \fC\-1\fP)\fC [static]\fP"

.PP
Compresses the image, and also gives the option to resize (max height / width specific while maintaining aspect ration)\&. If set to -1 it means to use the current image's width / height; 
.PP
\fBParameters\fP
.RS 4
\fIinputImagePath\fP Input path to image
.br
\fIquality\fP 0 - 100
.br
\fIresizeMaxWidth\fP If set to -1 it means to use the current image's width ;
.br
\fIresizeMaxHeight\fP If set to -1 it means to use the current image's height;
.RE
.PP

.SS "static byte [] JBToolkit\&.Images\&.ImageHelper\&.GetImageXxHash (Image image)\fC [static]\fP"

.PP
Get a 32bit xxHash of an image (very fast and useful for comparing) 
.SS "static bool JBToolkit\&.Images\&.ImageHelper\&.IsSameImage (Image imageA, Image imageB)\fC [static]\fP"

.PP
Checks if 1 image is the same as another by comparing its SHA hash\&. Also performs a quick check on image dimentions to avoid performs cost of unnecessarily generating a hash 
.PP
\fBReturns\fP
.RS 4
True if the same, false otherwise
.RE
.PP

.SS "static System\&.Drawing\&.Image JBToolkit\&.Images\&.ImageHelper\&.LightenImage (System\&.Drawing\&.Image image)\fC [static]\fP"

.PP
Lightens an image 
.SS "static System\&.Drawing\&.Image JBToolkit\&.Images\&.ImageHelper\&.NormalizeOrientation (System\&.Drawing\&.Image image)\fC [static]\fP"

.PP
This looks to see if there's an exif property on the image (meta property on image file that's usually applied when using the context menu in \fBWindows\fP to rotate an image)\&. If there is it properly rotates the image and removes the exif meta property\&. 
.SS "static byte [] JBToolkit\&.Images\&.ImageHelper\&.ResizeImage (byte[] image, int percentage)\fC [static]\fP"

.PP
Resize an image based on percentage to increase (above 100%) or decrease (below 100%) 
.SS "static byte [] JBToolkit\&.Images\&.ImageHelper\&.ResizeImage (byte[] image, int width, int height)\fC [static]\fP"

.PP
Resizes an image based on specific width and height 
.SS "static void JBToolkit\&.Images\&.ImageHelper\&.ResizeImage (string inputPath, string outputPath, int width, int height)\fC [static]\fP"

.PP
Resize an image with specific width and height and saved it to file 
.SS "static System\&.Drawing\&.Image JBToolkit\&.Images\&.ImageHelper\&.ResizeImage (System\&.Drawing\&.Image image, int percentage)\fC [static]\fP"

.PP
Resize an image based on percentage to increase (above 100%) or decrease (below 100%) 
.SS "static System\&.Drawing\&.Image JBToolkit\&.Images\&.ImageHelper\&.ResizeImage (System\&.Drawing\&.Image image, int width, int height)\fC [static]\fP"

.PP
Resize an image with specific width and height 
.SS "static byte [] JBToolkit\&.Images\&.ImageHelper\&.ResizeImageMaintainAspectRatio (byte[] image, int width, int height)\fC [static]\fP"

.PP
Resizes an image based on specific width and height 
.SS "static Image JBToolkit\&.Images\&.ImageHelper\&.ResizeImageMaintainAspectRatio (Image image, int width, int height)\fC [static]\fP"

.PP
Resizes an image and keeps the aspect ratio 
.SS "static void JBToolkit\&.Images\&.ImageHelper\&.ResizeImageMaintainAspectRatio (string inputPath, string outputPath, int width, int height)\fC [static]\fP"

.PP
Resize an image with specific width and height and saved it to file 

.SH "Author"
.PP 
Generated automatically by Doxygen for JB\&.Toolkit from the source code\&.
