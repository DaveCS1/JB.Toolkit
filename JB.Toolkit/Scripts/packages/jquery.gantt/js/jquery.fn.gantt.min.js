!function (e, t) { "use strict"; function a(t, a) { var n = new Date(parseInt(a, 10)); n.setHours(0, 0, 0, 0); var l = e(t).attr("id") || "", i = l.indexOf("-") + 1, s = new Date(parseInt(l.substring(i, l.length), 10)); return s.setHours(0, 0, 0, 0), n.getTime() === s.getTime() } function n(t, a) { var n = new Date(parseInt(a, 10)), l = n.getFullYear(), i = n.getWeekOfYear(), s = n.getMonth(); 11 === s && 1 === i ? l++ : !s && i > 51 && l-- , n = l + "-" + i; var o = e(t).attr("id") || "", r = o.indexOf("-") + 1; return n === o.substring(r, o.length) } function l(t, a) { var n = new Date(parseInt(a, 10)); n = n.getFullYear() + "-" + n.getMonth(); var l = e(t).attr("id") || "", i = l.indexOf("-") + 1; return n === l.substring(i, l.length) } e.expr.pseudos.findday = e.expr.createPseudo ? e.expr.createPseudo(function (e) { return function (t) { return a(t, e) } }) : function (e, t, n) { return a(e, n[3]) }, e.expr.pseudos.findweek = e.expr.createPseudo ? e.expr.createPseudo(function (e) { return function (t) { return n(t, e) } }) : function (e, t, a) { return n(e, a[3]) }, e.expr[":"].findmonth = e.expr.createPseudo ? e.expr.createPseudo(function (e) { return function (t) { return l(t, e) } }) : function (e, t, a) { return l(e, a[3]) }, Date.prototype.getWeekId = function () { var e = this.getFullYear(), t = this.getWeekOfYear(), a = this.getMonth(); return 11 === a && 1 === t ? e++ : !a && t > 51 && e-- , "dh-" + e + "-" + t }, Date.prototype.getRepDate = function (e) { switch (e) { case "hours": return this.getTime(); case "weeks": return this.getDayForWeek().getTime(); case "months": return new Date(this.getFullYear(), this.getMonth(), 1).getTime(); case "days": default: return this.getTime() } }, Date.prototype.getDayOfYear = function () { var e = this.getFullYear(); return (Date.UTC(e, this.getMonth(), this.getDate()) - Date.UTC(e, 0, 0)) / 864e5 }; Date.prototype.getWeekOfYear = function () { var e = this.getFullYear(), t = this.getMonth(), a = this.getDate(), n = this.getDay(), l = 4 - n; return n < 1 && (l -= 7), l + 7 < 3 && (l += 7), Math.ceil(new Date(e, t, a + l).getDayOfYear() / 7) }, Date.prototype.getDayForWeek = function () { var e = this.getDay(), t = 1 + (e < 1 ? -7 : 0) - e; return new Date(this.getFullYear(), this.getMonth(), this.getDate() + t) }, e.fn.gantt = function (t) { var a = ["hours", "days", "weeks", "months"], n = { source: [], holidays: [], itemsPerPage: 7, dow: ["S", "M", "T", "W", "T", "F", "S"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], waitText: "", navigate: "buttons", scrollToToday: !0, useCookie: !1, cookieKey: "jquery.fn.gantt", scale: "days", maxScale: "months", minScale: "hours", onItemClick: function (e) { }, onAddClick: function (e, t) { }, onRender: e.noop }; e.extend(n, t), n.useCookie = n.useCookie && e.isFunction(e.cookie); var l = { elementFromPoint: "CSS1Compat" === document.compatMode ? function (e, t) { return e -= window.pageXOffset, t -= window.pageYOffset, document.elementFromPoint(e, t) } : function (t, a) { return t -= e(document).scrollLeft(), a -= e(document).scrollTop(), document.elementFromPoint(t, a) }, create: function (t) { "string" != typeof n.source ? (t.data = n.source, l.init(t)) : e.getJSON(n.source, function (e) { t.data = e, l.init(t) }) }, init: function (t) { t.rowsNum = t.data.length, t.pageCount = Math.ceil(t.rowsNum / n.itemsPerPage), t.rowsOnLastPage = t.rowsNum - Math.floor(t.rowsNum / n.itemsPerPage) * n.itemsPerPage, t.dateStart = i.getMinDate(t), t.dateEnd = i.getMaxDate(t), l.waitToggle(t, function () { l.render(t) }), t.dateStart = i.getMinDate(t), t.dateEnd = i.getMaxDate(t); var a = t.dateEnd - t.dateStart, s = function () { switch (n.scale) { case "months": return 31; case "weeks": return 7; default: return 1 } }(), o = 864e5 * s, r = Math.ceil(a / o) + 1, d = Math.ceil(e(t).width() / i.getCellSize()) - r; d > 0 && t.dateEnd.setDate(t.dateEnd.getDate() + d * s) }, render: function (t) { var a = e('<div class="fn-content"/>'), i = l.leftPanel(t); a.append(i); var s, o = l.rightPanel(t, i); a.append(o), a.append(l.navigation(t)); var r = o.find(".dataPanel"); if (t.gantt = e('<div class="fn-gantt" />').append(a), e(t).empty().append(t.gantt), t.scrollNavigation.panelMargin = parseInt(r.css("left").replace("px", ""), 10), t.scrollNavigation.panelMaxPos = r.width() - o.width(), t.scrollNavigation.canScroll = r.width() > o.width(), l.markNow(t), l.fillData(t, r, i), n.useCookie) { var d = e.cookie(n.cookieKey + "ScrollPos"); d && (t.hPosition = d) } n.scrollToToday ? (l.navigateTo(t, "now"), l.scrollPanel(t, 0)) : (0 !== t.hPosition && (t.scaleOldWidth && (s = (r.width() - o.width()) * t.hPosition / t.scaleOldWidth, t.hPosition = s > 0 ? 0 : s, t.scaleOldWidth = null), r.css({ left: t.hPosition }), t.scrollNavigation.panelMargin = t.hPosition), l.repositionLabel(t)), r.css({ height: i.height() }), l.waitToggle(t), n.onRender() }, leftPanel: function (t) { var a = e('<div class="leftPanel"/>').append(e('<div class="row spacer"/>').css("height", i.getCellSize() * t.headerRows)), l = []; return e.each(t.data, function (e, a) { if (e >= t.pageNum * n.itemsPerPage && e < t.pageNum * n.itemsPerPage + n.itemsPerPage) { var s = "id" in a ? '" data-id="' + a.id : ""; l.push('<div class="row name row' + e + (a.desc ? "" : " fn-wide " + s) + '" id="rowheader' + e + '" data-offset="' + e % n.itemsPerPage * i.getCellSize() + '"><span class="fn-label' + (a.cssClass ? " " + a.cssClass : "") + '">' + (a.name || "") + "</span></div>"), a.desc && l.push('<div class="row desc row' + e + ' " id="RowdId_' + e + s + '"><span class="fn-label' + (a.cssClass ? " " + a.cssClass : "") + '">' + a.desc + "</span></div>") } }), a.append(l.join("")) }, dataPanel: function (t, a) { var s = e('<div class="dataPanel" style="width: ' + a + 'px;"/>'), o = "onwheel" in t ? "wheel" : void 0 !== document.onmousewheel ? "mousewheel" : "DOMMouseScroll"; return e(t).on(o, function (e) { l.wheelScroll(t, e) }), s.click(function (a) { var s; a.stopPropagation(); var o = e(t).find(".fn-gantt .leftPanel"), r = e(t).find(".fn-gantt .dataPanel"); switch (n.scale) { case "months": s = i.getCellSize(); break; case "hours": s = 4 * i.getCellSize(); break; case "days": s = 3 * i.getCellSize(); break; case "weeks": default: s = 2 * i.getCellSize() }var d = l.elementFromPoint(a.pageX, r.offset().top + s), c = (d = "fn-label" === d.className ? e(d.parentNode) : e(d)).data("repdate"), g = l.elementFromPoint(o.offset().left + o.width() - 10, a.pageY), u = (g = 0 === g.className.indexOf("fn-label") ? e(g.parentNode) : e(g)).data("id"); n.onAddClick(c, u) }), s }, rightPanel: function (t, a) { var s = null, o = ["sn", "wd", "wd", "wd", "wd", "wd", "sa"], r = [], d = 0, c = [], g = 0, u = [], h = 0, p = [], f = [], v = new Date; v.setHours(0, 0, 0, 0); var w, m, y, b, k, D, S, P, C, M, z = e('<div class="row header"></div>'); switch (n.scale) { case "hours": for (M = (s = i.parseTimeRange(t.dateStart, t.dateEnd, t.scaleStep)).length * i.getCellSize(), y = s[0].getFullYear(), b = s[0].getMonth(), D = s[0], w = 0, m = s.length; w < m; w++) { var T = (S = s[w]).getFullYear(); T !== y && (r.push('<div class="row year" style="width: ' + i.getCellSize() * d + 'px;"><div class="fn-label">' + y + "</div></div>"), y = T, d = 0), d++; var N = S.getMonth(); N !== b && (c.push('<div class="row month" style="width: ' + i.getCellSize() * g + 'px"><div class="fn-label">' + n.months[b] + "</div></div>"), b = N, g = 0), g++; var x = S.getDay(), Y = D.getDay(); x !== Y && (P = v - D == 0 ? "today" : i.isHoliday(D.getTime()) ? "holiday" : o[Y], u.push('<div class="row date ' + P + '" style="width: ' + i.getCellSize() * h + 'px;"><div class="fn-label">' + D.getDate() + "</div></div>"), p.push('<div class="row day ' + P + '" style="width: ' + i.getCellSize() * h + 'px;"><div class="fn-label">' + n.dow[Y] + "</div></div>"), D = S, h = 0), h++ , P = o[x], i.isHoliday(S) && (P = "holiday"), f.push('<div class="row day ' + P + '" id="dh-' + S.getTime() + '" data-offset="' + w * i.getCellSize() + '" data-repdate="' + S.getRepDate(n.scale) + '"><div class="fn-label">' + S.getHours() + "</div></div>") } r.push('<div class="row year" style="width: ' + i.getCellSize() * d + 'px;"><div class="fn-label">' + y + "</div></div>"), c.push('<div class="row month" style="width: ' + i.getCellSize() * g + 'px"><div class="fn-label">' + n.months[b] + "</div></div>"), P = o[D.getDay()], i.isHoliday(D) && (P = "holiday"), u.push('<div class="row date ' + P + '" style="width: ' + i.getCellSize() * h + 'px;"><div class="fn-label">' + D.getDate() + "</div></div>"), p.push('<div class="row day ' + P + '" style="width: ' + i.getCellSize() * h + 'px;"><div class="fn-label">' + n.dow[D.getDay()] + "</div></div>"), (C = l.dataPanel(t, M)).append(z.clone().html(r.join("")), z.clone().html(c.join("")), z.clone().html(u.join("")), z.clone().html(p.join("")), z.clone().html(f.join(""))); break; case "weeks": var F; for (M = (s = i.parseWeeksRange(t.dateStart, t.dateEnd)).length * i.getCellSize(), y = s[0].getFullYear(), b = s[0].getMonth(), k = s[0].getWeekOfYear(), w = 0, m = s.length; w < m; w++)k > (k = (S = s[w]).getWeekOfYear()) && (F = S.getDate() - 1, F -= S.getMonth() ? 31 : 0, F /= 7, r.push('<div class="row year" style="width: ' + i.getCellSize() * (d - F) + 'px;"><div class="fn-label">' + y + "</div></div>"), y++ , d = F), d++ , S.getMonth() !== b && (F = S.getDate() - 1, F /= 7, c.push('<div class="row month" style="width:' + i.getCellSize() * (g - F) + 'px;"><div class="fn-label">' + n.months[b] + "</div></div>"), b = S.getMonth(), g = F), g++ , u.push('<div class="row day wd" id="' + S.getWeekId() + '" data-offset="' + w * i.getCellSize() + '" data-repdate="' + S.getRepDate(n.scale) + '"><div class="fn-label">' + k + "</div></div>"); r.push('<div class="row year" style="width: ' + i.getCellSize() * d + 'px;"><div class="fn-label">' + y + "</div></div>"), c.push('<div class="row month" style="width: ' + i.getCellSize() * g + 'px"><div class="fn-label">' + n.months[b] + "</div></div>"), (C = l.dataPanel(t, M)).append(z.clone().html(r.join("")), z.clone().html(c.join("")), z.clone().html(u.join(""))); break; case "months": for (M = (s = i.parseMonthsRange(t.dateStart, t.dateEnd)).length * i.getCellSize(), y = s[0].getFullYear(), b = s[0].getMonth(), w = 0, m = s.length; w < m; w++)(S = s[w]).getFullYear() !== y && (r.push('<div class="row year" style="width: ' + i.getCellSize() * d + 'px;"><div class="fn-label">' + y + "</div></div>"), y = S.getFullYear(), d = 0), d++ , c.push('<div class="row day wd" id="dh-' + i.genId(S) + '" data-offset="' + w * i.getCellSize() + '" data-repdate="' + S.getRepDate(n.scale) + '">' + (1 + S.getMonth()) + "</div>"); r.push('<div class="row year" style="width: ' + i.getCellSize() * d + 'px;"><div class="fn-label">' + y + "</div></div>"), (C = l.dataPanel(t, M)).append(z.clone().html(r.join("")), z.clone().html(c.join(""))); break; default: for (M = (s = i.parseDateRange(t.dateStart, t.dateEnd)).length * i.getCellSize(), y = s[0].getFullYear(), b = s[0].getMonth(), w = 0, m = s.length; w < m; w++)(S = s[w]).getFullYear() !== y && (r.push('<div class="row year" style="width:' + i.getCellSize() * d + 'px;"><div class="fn-label">' + y + "</div></div>"), y = S.getFullYear(), d = 0), d++ , S.getMonth() !== b && (c.push('<div class="row month" style="width:' + i.getCellSize() * g + 'px;"><div class="fn-label">' + n.months[b] + "</div></div>"), b = S.getMonth(), g = 0), g++ , P = o[D = S.getDay()], i.isHoliday(S) && (P = "holiday"), u.push('<div class="row date ' + P + '" id="dh-' + i.genId(S) + '" data-offset="' + w * i.getCellSize() + '" data-repdate="' + S.getRepDate(n.scale) + '"><div class="fn-label">' + S.getDate() + "</div></div>"), p.push('<div class="row day ' + P + '" id="dw-' + i.genId(S) + '" data-repdate="' + S.getRepDate(n.scale) + '"><div class="fn-label">' + n.dow[D] + "</div></div>"); r.push('<div class="row year" style="width: ' + i.getCellSize() * d + 'px;"><div class="fn-label">' + y + "</div></div>"), c.push('<div class="row month" style="width: ' + i.getCellSize() * g + 'px"><div class="fn-label">' + n.months[b] + "</div></div>"), (C = l.dataPanel(t, M)).append(z.clone().html(r.join("")), z.clone().html(c.join("")), z.clone().html(u.join("")), z.clone().html(p.join(""))) }return e('<div class="rightPanel"></div>').append(C) }, navigation: function (t) { var a = null; return "scroll" === n.navigate ? (a = e('<div class="navigate" />').append(e('<div class="nav-slider" />').append(e('<div class="nav-slider-left" />').append(e('<button type="button" class="nav-link nav-page-back"/>').html("&uarr;").click(function () { l.navigatePage(t, -1) })).append(e('<div class="page-number"/>').append(e("<span/>").html(t.pageNum + 1 + " / " + t.pageCount))).append(e('<button type="button" class="nav-link nav-page-next"/>').html("&darr;").click(function () { l.navigatePage(t, 1) })).append(e('<button type="button" class="nav-link nav-now"/>').html("&#9679;").click(function () { l.navigateTo(t, "now") })).append(e('<button type="button" class="nav-link nav-prev-week"/>').html("&lt;&lt;").click(function () { "hours" === n.scale ? l.navigateTo(t, 8 * i.getCellSize()) : "days" === n.scale ? l.navigateTo(t, 30 * i.getCellSize()) : "weeks" === n.scale ? l.navigateTo(t, 12 * i.getCellSize()) : "months" === n.scale && l.navigateTo(t, 6 * i.getCellSize()) })).append(e('<button type="button" class="nav-link nav-prev-day"/>').html("&lt;").click(function () { "hours" === n.scale ? l.navigateTo(t, 4 * i.getCellSize()) : "days" === n.scale ? l.navigateTo(t, 7 * i.getCellSize()) : "weeks" === n.scale ? l.navigateTo(t, 4 * i.getCellSize()) : "months" === n.scale && l.navigateTo(t, 3 * i.getCellSize()) }))).append(e('<div class="nav-slider-content" />').append(e('<div class="nav-slider-bar" />').append(e('<a class="nav-slider-button" />')).mousedown(function (e) { e.preventDefault(), t.scrollNavigation.scrollerMouseDown = !0, l.sliderScroll(t, e) }).mousemove(function (e) { t.scrollNavigation.scrollerMouseDown && l.sliderScroll(t, e) }))).append(e('<div class="nav-slider-right" />').append(e('<button type="button" class="nav-link nav-next-day"/>').html("&gt;").click(function () { "hours" === n.scale ? l.navigateTo(t, -4 * i.getCellSize()) : "days" === n.scale ? l.navigateTo(t, -7 * i.getCellSize()) : "weeks" === n.scale ? l.navigateTo(t, -4 * i.getCellSize()) : "months" === n.scale && l.navigateTo(t, -3 * i.getCellSize()) })).append(e('<button type="button" class="nav-link nav-next-week"/>').html("&gt;&gt;").click(function () { "hours" === n.scale ? l.navigateTo(t, -8 * i.getCellSize()) : "days" === n.scale ? l.navigateTo(t, -30 * i.getCellSize()) : "weeks" === n.scale ? l.navigateTo(t, -12 * i.getCellSize()) : "months" === n.scale && l.navigateTo(t, -6 * i.getCellSize()) })).append(e('<button type="button" class="nav-link nav-zoomIn"/>').html("&#43;").click(function () { l.zoomInOut(t, -1) })).append(e('<button type="button" class="nav-link nav-zoomOut"/>').html("&#45;").click(function () { l.zoomInOut(t, 1) })))), e(document).mouseup(function () { t.scrollNavigation.scrollerMouseDown = !1 })) : a = e('<div class="navigate" />').append(e('<button type="button" class="nav-link nav-page-back"/>').html("&uarr;").click(function () { l.navigatePage(t, -1) })).append(e('<div class="page-number"/>').append(e("<span/>").html(t.pageNum + 1 + " / " + t.pageCount))).append(e('<button type="button" class="nav-link nav-page-next"/>').html("&darr;").click(function () { l.navigatePage(t, 1) })).append(e('<button type="button" class="nav-link nav-begin"/>').html("&#124;&lt;").click(function () { l.navigateTo(t, "begin") })).append(e('<button type="button" class="nav-link nav-prev-week"/>').html("&lt;&lt;").click(function () { l.navigateTo(t, 7 * i.getCellSize()) })).append(e('<button type="button" class="nav-link nav-prev-day"/>').html("&lt;").click(function () { l.navigateTo(t, i.getCellSize()) })).append(e('<button type="button" class="nav-link nav-now"/>').html("&#9679;").click(function () { l.navigateTo(t, "now") })).append(e('<button type="button" class="nav-link nav-next-day"/>').html("&gt;").click(function () { l.navigateTo(t, -1 * i.getCellSize()) })).append(e('<button type="button" class="nav-link nav-next-week"/>').html("&gt;&gt;").click(function () { l.navigateTo(t, -7 * i.getCellSize()) })).append(e('<button type="button" class="nav-link nav-end"/>').html("&gt;&#124;").click(function () { l.navigateTo(t, "end") })).append(e('<button type="button" class="nav-link nav-zoomIn"/>').html("&#43;").click(function () { l.zoomInOut(t, -1) })).append(e('<button type="button" class="nav-link nav-zoomOut"/>').html("&#45;").click(function () { l.zoomInOut(t, 1) })), e('<div class="bottom"></div>').append(a) }, createProgressBar: function (t, a, l, i) { var s = e('<div class="bar"><div class="fn-label">' + (t = t || "") + "</div></div>").data("dataObj", i); return a && s.mouseenter(function (t) { var n = e('<div class="fn-gantt-hint" />').html(a); e("body").append(n), n.css("left", t.pageX), n.css("top", t.pageY), n.show() }).mouseleave(function () { e(".fn-gantt-hint").remove() }).mousemove(function (t) { e(".fn-gantt-hint").css("left", t.pageX), e(".fn-gantt-hint").css("top", t.pageY + 15) }), l && s.addClass(l), s.click(function (t) { t.stopPropagation(), n.onItemClick(e(this).data("dataObj")) }), s }, markNow: function (t) { var a = (new Date).setHours(0, 0, 0, 0); switch (n.scale) { case "weeks": e(t).find(':findweek("' + a + '")').removeClass("wd").addClass("today"); break; case "months": e(t).find(':findmonth("' + a + '")').removeClass("wd").addClass("today"); break; case "days": case "hours": default: e(t).find(':findday("' + a + '")').removeClass("wd").addClass("today") } }, fillData: function (t, a, s) { var o = i.getCellSize(), r = (o - 18) / 2, d = a.width(); e.each(t.data, function (s, c) { s >= t.pageNum * n.itemsPerPage && s < t.pageNum * n.itemsPerPage + n.itemsPerPage && e.each(c.values, function (c, g) { var u, h, p, f, v, w, m, y, b, k, D; switch (n.scale) { case "hours": w = i.genId(i.dateDeserialize(g.from), t.scaleStep), h = e(t).find("#dh-" + w), m = i.genId(i.dateDeserialize(g.to), t.scaleStep), p = e(t).find("#dh-" + m), f = h.data("offset"), v = p.data("offset"), y = Math.floor((v - f) / o) + 1, b = 100 * (o * y - 1) / d, u = l.createProgressBar(g.label, g.desc, g.customClass, g.dataObj), k = e(t).find("#rowheader" + s), D = 5 * o + r + k.data("offset"), u.css({ top: D, left: Math.floor(f), width: b + "%" }), a.append(u); break; case "weeks": w = i.dateDeserialize(g.from), m = i.dateDeserialize(g.to), f = (h = e(t).find("#" + w.getWeekId())).data("offset"), v = (p = e(t).find("#" + m.getWeekId())).data("offset"), y = Math.round((v - f) / o) + 1, b = 100 * (o * y - 1) / d, u = l.createProgressBar(g.label, g.desc, g.customClass, g.dataObj), k = e(t).find("#rowheader" + s), D = 3 * o + r + k.data("offset"), u.css({ top: D, left: Math.floor(f), width: b + "%" }), a.append(u); break; case "months": w = i.dateDeserialize(g.from), m = i.dateDeserialize(g.to), w.getDate() <= 3 && 0 === w.getMonth() && w.setDate(w.getDate() + 4), w.getDate() <= 3 && 0 === w.getMonth() && w.setDate(w.getDate() + 4), m.getDate() <= 3 && 0 === m.getMonth() && m.setDate(m.getDate() + 4), f = (h = e(t).find("#dh-" + i.genId(w))).data("offset"), v = (p = e(t).find("#dh-" + i.genId(m))).data("offset"), y = Math.round((v - f) / o) + 1, b = 100 * (o * y - 1) / d, u = l.createProgressBar(g.label, g.desc, g.customClass, g.dataObj), k = e(t).find("#rowheader" + s), D = 2 * o + r + k.data("offset"), u.css({ top: D, left: Math.floor(f), width: b + "%" }), a.append(u); break; case "days": default: w = i.genId(i.dateDeserialize(g.from)), m = i.genId(i.dateDeserialize(g.to)), f = (h = e(t).find("#dh-" + w)).data("offset"), y = Math.round((m - w) / 864e5) + 1, b = 100 * (o * y - 1) / d, u = l.createProgressBar(g.label, g.desc, g.customClass, g.dataObj), k = e(t).find("#rowheader" + s), D = 4 * o + r + k.data("offset"), u.css({ top: D, left: Math.floor(f), width: b + "%" }), a.append(u) }var S = u.find(".fn-label"); if (S.length) { var P = function (e) { try { var t = (e = e.replace("rgb(", "").replace(")", "")).split(","), a = parseInt(t[0], 10), n = parseInt(t[1], 10), l = parseInt(t[2], 10), i = Math.round(.9 * (255 - (.299 * a + .587 * n + .114 * l))); return "rgb(" + i + ", " + i + ", " + i + ")" } catch (e) { return "" } }(u.css("backgroundColor")); S.css("color", P) } }) }) }, navigateTo: function (t, a) { var n, i, s = e(t).find(".fn-gantt .rightPanel"), o = s.find(".dataPanel"), r = s.width(), d = o.width(), c = function () { l.repositionLabel(t) }; switch (a) { case "begin": o.animate({ left: "0" }, "fast", c), t.scrollNavigation.panelMargin = 0; break; case "end": var g = d - r; t.scrollNavigation.panelMargin = -1 * g, o.animate({ left: "-" + g }, "fast", c); break; case "now": if (!t.scrollNavigation.canScroll || !o.find(".today").length) return !1; n = -1 * (d - r), i = o.css("left").replace("px", ""), a = o.find(".today").offset().left - o.offset().left, (a *= -1) > 0 ? a = 0 : a < n && (a = n), o.animate({ left: a }, "fast", c), t.scrollNavigation.panelMargin = a; break; default: n = -1 * (d - r), i = o.css("left").replace("px", ""), (a = parseInt(i, 10) + a) <= 0 && a >= n && o.animate({ left: a }, "fast", c), t.scrollNavigation.panelMargin = a }l.synchronizeScroller(t) }, navigatePage: function (t, a) { t.pageNum + a >= 0 && t.pageNum + a < Math.ceil(t.rowsNum / n.itemsPerPage) && l.waitToggle(t, function () { t.pageNum += a, t.hPosition = e(".fn-gantt .dataPanel").css("left").replace("px", ""), t.scaleOldWidth = !1, l.init(t) }) }, zoomInOut: function (t, i) { l.waitToggle(t, function () { var s = i < 0, o = t.scaleStep + 3 * i; o = { 4: 3, 5: 6, 9: 8, 11: 12 }[o] || (o < 1 ? 1 : o); var r = n.scale, d = t.headerRows; if ("hours" === n.scale && o >= 13 ? (r = "days", d = 4, o = 13) : "days" === n.scale && s ? (r = "hours", d = 5, o = 12) : "days" !== n.scale || s ? "weeks" !== n.scale || s ? "weeks" === n.scale && s ? (r = "days", d = 4, o = 13) : "months" === n.scale && s && (r = "weeks", d = 3, o = 13) : (r = "months", d = 2, o = 14) : (r = "weeks", d = 3, o = 13), s && e.inArray(r, a) < e.inArray(n.minScale, a) || !s && e.inArray(r, a) > e.inArray(n.maxScale, a)) l.init(t); else { t.scaleStep = o, n.scale = r, t.headerRows = d; var c = e(t).find(".fn-gantt .rightPanel"), g = c.find(".dataPanel"); t.hPosition = g.css("left").replace("px", ""), t.scaleOldWidth = g.width() - c.width(), n.useCookie && (e.cookie(n.cookieKey + "CurrentScale", n.scale), e.cookie(n.cookieKey + "ScrollPos", null)), l.init(t) } }) }, mouseScroll: function (t, a) { var n = e(t).find(".fn-gantt .dataPanel"); n.css("cursor", "move"); n.offset(); var i = null === t.scrollNavigation.mouseX ? a.pageX : t.scrollNavigation.mouseX, s = a.pageX - i; t.scrollNavigation.mouseX = a.pageX, l.scrollPanel(t, s), clearTimeout(t.scrollNavigation.repositionDelay), t.scrollNavigation.repositionDelay = setTimeout(l.repositionLabel, 50, t) }, wheelScroll: function (e, t) { t.preventDefault(); var a = "detail" in t ? t.detail : "wheelDelta" in t.originalEvent ? -1 / 120 * t.originalEvent.wheelDelta : t.originalEvent.deltaY ? t.originalEvent.deltaY / Math.abs(t.originalEvent.deltaY) : t.originalEvent.detail; l.scrollPanel(e, -50 * a), clearTimeout(e.scrollNavigation.repositionDelay), e.scrollNavigation.repositionDelay = setTimeout(l.repositionLabel, 50, e) }, sliderScroll: function (t, a) { var n, i, s = e(t).find(".nav-slider-bar"), o = s.find(".nav-slider-button"), r = e(t).find(".fn-gantt .rightPanel"), d = r.find(".dataPanel"), c = s.offset(), g = s.width(), u = o.width(); if (a.pageX >= c.left && a.pageX <= c.left + g) { n = a.pageX - c.left, n -= u / 2, o.css("left", n); var h = n * (i = d.width() - r.width()) / g * -1; h >= 0 ? (d.css("left", "0"), t.scrollNavigation.panelMargin = 0) : n >= g - 1 * u ? (d.css("left", -1 * i), t.scrollNavigation.panelMargin = -1 * i) : (d.css("left", h), t.scrollNavigation.panelMargin = h), clearTimeout(t.scrollNavigation.repositionDelay), t.scrollNavigation.repositionDelay = setTimeout(l.repositionLabel, 5, t) } }, scrollPanel: function (t, a) { if (!t.scrollNavigation.canScroll) return !1; var n = parseInt(t.scrollNavigation.panelMargin, 10) + a; n > 0 ? (t.scrollNavigation.panelMargin = 0, e(t).find(".fn-gantt .dataPanel").css("left", t.scrollNavigation.panelMargin)) : n < -1 * t.scrollNavigation.panelMaxPos ? (t.scrollNavigation.panelMargin = -1 * t.scrollNavigation.panelMaxPos, e(t).find(".fn-gantt .dataPanel").css("left", t.scrollNavigation.panelMargin)) : (t.scrollNavigation.panelMargin = n, e(t).find(".fn-gantt .dataPanel").css("left", t.scrollNavigation.panelMargin)), l.synchronizeScroller(t) }, synchronizeScroller: function (t) { if ("scroll" === n.navigate) { var a = e(t).find(".fn-gantt .rightPanel"), l = a.find(".dataPanel"), i = e(t).find(".nav-slider-bar"), s = i.find(".nav-slider-button"), o = i.width(), r = s.width(), d = l.width() - a.width(), c = l.css("left") || 0; c && (c = c.replace("px", "")); var g = c * o / d - .25 * s.width(); g = g > 0 ? 0 : -1 * g >= o - .75 * r ? -1 * (o - 1.25 * r) : g, s.css("left", -1 * g) } }, repositionLabel: function (t) { setTimeout(function () { var a; t ? a = e(t).find(".fn-gantt .rightPanel").find(".dataPanel") : a = e(".fn-gantt .rightPanel .dataPanel"); n.useCookie && e.cookie(n.cookieKey + "ScrollPos", a.css("left").replace("px", "")) }, 500) }, waitToggle: function (t, a) { if (e.isFunction(a)) { var l = e(t); l.offset(), l.outerWidth(), l.outerHeight(); t.loader || (t.loader = e('<div class="fn-gantt-loader"><div class="fn-gantt-loader-spinner"><span>' + n.waitText + "</span></div></div>")), l.append(t.loader), setTimeout(a, 500) } else t.loader && t.loader.detach() } }, i = { getMaxDate: function (t) { var a, l = null; switch (e.each(t.data, function (t, a) { e.each(a.values, function (e, t) { l = l < i.dateDeserialize(t.to) ? i.dateDeserialize(t.to) : l }) }), l = l || new Date, n.scale) { case "hours": l.setHours(Math.ceil(l.getHours() / t.scaleStep) * t.scaleStep), l.setHours(l.getHours() + 3 * t.scaleStep); break; case "weeks": a = new Date(l.getTime()), a = new Date(a.setDate(a.getDate() + 21)); var s = 7 * Math.floor(a.getDate() / 7); l = new Date(a.getFullYear(), a.getMonth(), 0 === s ? 4 : s - 3); break; case "months": (a = new Date(l.getFullYear(), l.getMonth(), 1)).setMonth(a.getMonth() + 2), l = new Date(a.getFullYear(), a.getMonth(), 1); break; case "days": default: l.setHours(0), l.setDate(l.getDate() + 3) }return l }, getMinDate: function (t) { var a = null; switch (e.each(t.data, function (t, n) { e.each(n.values, function (e, t) { a = a > i.dateDeserialize(t.from) || null === a ? i.dateDeserialize(t.from) : a }) }), a = a || new Date, n.scale) { case "hours": a.setHours(Math.floor(a.getHours() / t.scaleStep) * t.scaleStep), a.setHours(a.getHours() - 3 * t.scaleStep); break; case "weeks": var l = new Date(a.getTime()); l = new Date(l.setDate(l.getDate() - 21)); var s = 7 * Math.floor(l.getDate() / 7); a = new Date(l.getFullYear(), l.getMonth(), 0 === s ? 4 : s - 3); break; case "months": a.setHours(0, 0, 0, 0), a.setDate(1), a.setMonth(a.getMonth() - 3); break; case "days": default: a.setHours(0, 0, 0, 0), a.setDate(a.getDate() - 3) }return a }, parseDateRange: function (e, t) { var a = e.getFullYear(), n = e.getMonth(), l = e.getDate(), i = [], s = 0; do { i[s] = new Date(a, n, l + s) } while (i[s++] < t); return i }, parseTimeRange: function (e, t, a) { var n = e.getFullYear(), l = e.getMonth(), i = e.getDate(), s = e.getHours(); s -= s % a; var o = [], r = 0, d = 0; do { o[d] = new Date(n, l, i, s + r++ * a), d > 0 && o[d].getHours() === o[d - 1].getHours() && d-- } while (o[d++] < t); return o }, parseWeeksRange: function (e, t) { var a = e.getDayForWeek(), n = [], l = 0; do { n[l++] = a.getDayForWeek(), a.setDate(a.getDate() + 7) } while (a <= t); return n }, parseMonthsRange: function (e, t) { var a = new Date(e), n = (new Date(t), []), l = 0; do { n[l++] = new Date(a.getFullYear(), a.getMonth(), 1), a.setMonth(a.getMonth() + 1) } while (a <= t); return n }, dateDeserialize: function (t) { return "string" == typeof t && (t = t.replace(/\/Date\((.*)\)\//, "$1"), t = e.isNumeric(t) ? parseInt(t, 10) : e.trim(t)), new Date(t) }, genId: function (t) { switch (e.isNumeric(t) && (t = new Date(t)), n.scale) { case "hours": var a = t.getHours(); return arguments.length >= 2 && (a = Math.floor(t.getHours() / arguments[1]) * arguments[1]), new Date(t.getFullYear(), t.getMonth(), t.getDate(), a).getTime(); case "weeks": var l = t.getFullYear(), i = t.getWeekOfYear(), s = t.getMonth(); return 11 === s && 1 === i ? l++ : !s && i > 51 && l-- , l + "-" + i; case "months": return t.getFullYear() + "-" + t.getMonth(); case "days": default: return new Date(t.getFullYear(), t.getMonth(), t.getDate()).getTime() } }, _datesToDays: function (e) { for (var t = {}, a = 0, n = e.length; a < n; a++)t[i.dateDeserialize(e[a]).setHours(0, 0, 0, 0)] = !0; return t }, isHoliday: function () { if (!n.holidays || !n.holidays.length) return function () { return !1 }; var t = !1; return function (a) { return t || (t = i._datesToDays(n.holidays)), !!t[e.isNumeric(a) ? a : new Date(a.getFullYear(), a.getMonth(), a.getDate()).getTime()] } }(), getCellSize: function () { if (void 0 === i._getCellSize) { var t = e('<div style="display: none; position: absolute;" class="fn-gantt"><div class="row"></div></div>'); e("body").append(t), i._getCellSize = t.find(".row").height(), t.empty().remove() } return i._getCellSize }, getPageHeight: function (e) { return e.pageNum + 1 === e.pageCount ? e.rowsOnLastPage * i.getCellSize() : n.itemsPerPage * i.getCellSize() } }; this.each(function () { if (this.data = null, this.pageNum = 0, this.pageCount = 0, this.rowsOnLastPage = 0, this.rowsNum = 0, this.hPosition = 0, this.dateStart = null, this.dateEnd = null, this.scrollClicked = !1, this.scaleOldWidth = null, this.headerRows = null, n.useCookie) { var t = e.cookie(n.cookieKey + "CurrentScale"); t ? n.scale = t : e.cookie(n.cookieKey + "CurrentScale", n.scale) } switch (n.scale) { case "hours": this.headerRows = 5, this.scaleStep = 1; break; case "weeks": this.headerRows = 3, this.scaleStep = 13; break; case "months": this.headerRows = 2, this.scaleStep = 14; break; case "days": default: this.headerRows = 4, this.scaleStep = 13 }this.scrollNavigation = { panelMouseDown: !1, scrollerMouseDown: !1, mouseX: null, panelMargin: 0, repositionDelay: 0, panelMaxPos: 0, canScroll: !0 }, this.gantt = null, this.loader = null, l.create(this) }) } }(jQuery);